--> PROCEDIMIENTO PRINCIPAL.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_PRINCIPAL_PRINCIPAL
IS 
BEGIN 
     G4_PROYECTO_USUARIO_4.FACTURA;
     G4_PROYECTO_USUARIO_4.SALARIO;
END;
--> PRUEBA
EXECUTE G4_PROYECTO_USUARIO_4.SP_PRINCIPAL_PRINCIPAL;

DELETE G4_PROYECTO_USUARIO_1.DETALLE_FACTURA;
DELETE G4_PROYECTO_USUARIO_1.FACTURA;
DELETE G4_PROYECTO_USUARIO_1.SALARIO;
DELETE G4_PROYECTO_USUARIO_3.ORDENES;
COMMIT;

SELECT * FROM G4_PROYECTO_USUARIO_3.ORDENES;
SELECT * FROM G4_PROYECTO_USUARIO_1.SALARIO;
SELECT * FROM G4_PROYECTO_USUARIO_1.FACTURA;
SELECT * FROM G4_PROYECTO_USUARIO_1.DETALLE_FACTURA;
SELECT * FROM G4_PROYECTO_USUARIO_2.EMPLEADO;

--> SINTAXIS CORRECTA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.FACTURA
IS
CURSOR CUR_ATENDIDO
IS 
SELECT  ORDE_ID, 
               ORDE_EMPLEADO_ID, 
               ORDE_CLIENTES_ID, 
               ORDE_MENU_ID, 
               ORDE_CANTIDAD
FROM G4_PROYECTO_USUARIO_3.ORDENES
WHERE ORDE_ATENDIDO = 0;

BEGIN 

    FOR principal IN CUR_ATENDIDO LOOP
         G4_PROYECTO_USUARIO_4.SP_CREAR_FACTURA(principal.ORDE_EMPLEADO_ID,
                                                                                          principal.ORDE_CLIENTES_ID,
                                                                                          principal.ORDE_ID);

          G4_PROYECTO_USUARIO_4.SP_CREAR_DETALLE_FACTURA (G4_PROYECTO_USUARIO_4.FN_ID_FACTURA , principal.ORDE_MENU_ID,  principal.ORDE_CANTIDAD);
          
          G4_PROYECTO_USUARIO_4.SP_UPDATE_SUBTOTAL_FACUTURA (G4_PROYECTO_USUARIO_4.FN_ID_FACTURA);
          G4_PROYECTO_USUARIO_4.SP_UPDATE_TOTAL_FACUTURA (G4_PROYECTO_USUARIO_4.FN_ID_FACTURA);
          G4_PROYECTO_USUARIO_4.SP_UPDATE_ORDEN_ATENDIDA (principal.ORDE_ID);                                                                                         
    END LOOP;
END;
--> PRUEBA.
EXECUTE G4_PROYECTO_USUARIO_4.FACTURA;

CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SALARIO
IS
CURSOR CUR_SALARIO
IS
SELECT  EMPL_ID
FROM G4_PROYECTO_USUARIO_2.EMPLEADO
WHERE EMPL_ID <=  G4_PROYECTO_USUARIO_4.FN_ID_EMPLEADO;

BEGIN 
        
    FOR salario IN CUR_SALARIO LOOP
        G4_PROYECTO_USUARIO_4.SP_PAGAR_SALARIO (salario.EMPL_ID);                                                                                
    END LOOP;
 
END;
--> PRUEBA
EXECUTE G4_PROYECTO_USUARIO_4.SALARIO;
--> VALIDAR INFORMACIÓN.
SELECT * FROM g4_proyecto_usuario_1.SALARIO;

--> FUNCIÓN QUE RETORNA EL ID MÁXIMO DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_ID_EMPLEADO
RETURN NUMBER
IS 
v_EMP_ID_MAX NUMBER;
BEGIN
    SELECT MAX (EMPL_ID)
        INTO v_EMP_ID_MAX
            FROM G4_PROYECTO_USUARIO_2.EMPLEADO;
    RETURN v_EMP_ID_MAX;
END;
SELECT G4_PROYECTO_USUARIO_4.FN_ID_EMPLEADO
FROM DUAL;

--> MÉTODO QUE CREA LA FACTURA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_CREAR_FACTURA(PID_EMPLEADO IN NUMBER,
                                                                                                                                            PID_CLIENTE IN NUMBER,
                                                                                                                                            PID_ORDENES IN NUMBER)
IS 
BEGIN
    INSERT INTO G4_PROYECTO_USUARIO_1.FACTURA (FACT_FECHA, FACT_EMPLEADO_ID, FACT_CLIENTE_ID, FACT_ORDENES_ID)
                                                                          VALUES (SYSDATE, PID_EMPLEADO, PID_CLIENTE, PID_ORDENES);
    COMMIT;                                                                    

END;
--> PRUEBA
EXECUTE G4_PROYECTO_USUARIO_4.SP_CREAR_FACTURA (1,2,3,1,3);
SELECT * FROM G4_PROYECTO_USUARIO_1.FACTURA;
SELECT * FROM G4_PROYECTO_USUARIO_1.DETALLE_FACTURA;
SELECT * FROM G4_PROYECTO_USUARIO_3.ORDENES;

--> MÉTODO QUE CREA EL DETALLE DE LA FACTURA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_CREAR_DETALLE_FACTURA (PID_FACTURA IN NUMBER,
                                                                                                                                                             PID_MENU IN NUMBER,
                                                                                                                                                             PCANTIDAD IN NUMBER)
IS 

BEGIN 
    INSERT INTO G4_PROYECTO_USUARIO_1.DETALLE_FACTURA (DETA_FACT_ID, DETA_MENU_ID, DETA_CANTIDAD, DETA_PRECIO, DETA_TOTAL)
                                                                              VALUES (G4_PROYECTO_USUARIO_4.FN_ID_FACTURA, 
                                                                                              PID_MENU,  PCANTIDAD,  
                                                                                              G4_PROYECTO_USUARIO_4.FN_GET_PRECIO_PLATILLO (PID_MENU), 
                                                                                              G4_PROYECTO_USUARIO_4.FN_MONTO_TOTAL_DETALLE (PCANTIDAD, PID_MENU) );
     COMMIT;
END;
--> PRUEBA.
EXECUTE G4_PROYECTO_USUARIO_4.SP_GENERAR_DETALLE_FACTURA ();

--> FUNCIÓN QUE RETORNA EL ID MÁXIMO DE LA TABLA FACTURA.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_ID_FACTURA 
RETURN NUMBER 
IS 
v_ID_FACTURA NUMBER;
BEGIN 
    SELECT MAX (FACT_ID)
        INTO v_ID_FACTURA
            FROM  G4_PROYECTO_USUARIO_1.FACTURA;

RETURN v_ID_FACTURA;
END;
--> PRUEBA.
SELECT G4_PROYECTO_USUARIO_4.FN_ID_FACTURA
FROM DUAL;

--> FUNCIÓN QUE RETORNA EL PRECIO DEL MENÚ.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_GET_PRECIO_PLATILLO (PID_MENU IN NUMBER)
RETURN NUMBER
IS 
v_PRECIO NUMBER;
BEGIN
    SELECT MENU_PRECIO
        INTO v_PRECIO
            FROM G4_PROYECTO_USUARIO_2.MENU
                WHERE MENU_ID = PID_MENU;
    RETURN v_PRECIO;
END;
--> PRUEBA.
SELECT G4_PROYECTO_USUARIO_4.FN_GET_PRECIO_PLATILLO (3)
FROM DUAL;

--> FUNCIÓN QUE RETORNA EL MONTO TOTAL DEL DETALLE DE FACTURA.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_MONTO_TOTAL_DETALLE (PCANTIDAD IN NUMBER, PMENU_ID IN NUMBER)
RETURN NUMBER
IS 
v_TOTAL_DETALLE_FACTURA NUMBER;
BEGIN 
    v_TOTAL_DETALLE_FACTURA := PCANTIDAD * G4_PROYECTO_USUARIO_4.FN_GET_PRECIO_PLATILLO (PMENU_ID);

RETURN v_TOTAL_DETALLE_FACTURA;
END;
--> PRUEBA.
SELECT G4_PROYECTO_USUARIO_4.FN_MONTO_TOTAL_DETALLE (4, 1)
FROM DUAL;

--> PROCEDIMIETNO QUE CALCULA EL SUBTOTAL DE LA FACTURA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_UPDATE_SUBTOTAL_FACUTURA (P_ID_FACTURA IN NUMBER)
IS 
v_SUBTOTAL NUMBER;
BEGIN

    SELECT SUM (DETA_TOTAL)
        INTO v_SUBTOTAL
            FROM G4_PROYECTO_USUARIO_1.DETALLE_FACTURA
                WHERE DETA_FACT_ID = P_ID_FACTURA;
                
    UPDATE G4_PROYECTO_USUARIO_1.FACTURA
        SET FACT_SUBTOTAL = v_SUBTOTAL
            WHERE FACT_ID = P_ID_FACTURA;
    COMMIT;
    
END;
--> PRUEBA
EXECUTE G4_PROYECTO_USUARIO_4.SP_UPDATE_SUBTOTAL_FACUTURA(23);
SELECT * FROM G4_PROYECTO_USUARIO_1.FACTURA;

--> PROCEDIMIETNO QUE CALCULA EL TOTAL DE LA FACTURA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_UPDATE_TOTAL_FACUTURA (P_ID_FACTURA IN NUMBER) 
IS 
v_SUBTOTAL NUMBER;
v_TOTAL NUMBER;
v_IVA_CALC NUMBER;
BEGIN

     
    
    SELECT SUM (DETA_TOTAL)
        INTO v_SUBTOTAL
            FROM G4_PROYECTO_USUARIO_1.DETALLE_FACTURA
                WHERE DETA_FACT_ID = P_ID_FACTURA;
    
    v_IVA_CALC := (v_SUBTOTAL * 0.13);
    v_TOTAL :=  v_SUBTOTAL + v_IVA_CALC;
    
    UPDATE G4_PROYECTO_USUARIO_1.FACTURA
        SET FACT_TOTAL = v_TOTAL
            WHERE FACT_ID = P_ID_FACTURA;
     COMMIT; 

END;
EXECUTE G4_PROYECTO_USUARIO_4.SP_UPDATE_TOTAL_FACUTURA (23);
SELECT * FROM G4_PROYECTO_USUARIO_1.FACTURA;

--> PROCEDIMIENTO QUE VALIDA SI LA ORDEN FUE ATENDIDA.
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_UPDATE_ORDEN_ATENDIDA (PORDE_ID IN NUMBER)
IS
BEGIN 

    UPDATE G4_PROYECTO_USUARIO_3.ORDENES
        SET ORDENES.ORDE_ATENDIDO = 1
            WHERE ORDE_ID = PORDE_ID;
    COMMIT;
END;

--> 
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_PAGAR_SALARIO (P_EMPLEADO_ID IN NUMBER)
IS 
BEGIN 
    INSERT INTO G4_PROYECTO_USUARIO_1.SALARIO (SALA_FECHA, SALA_EMPLEADO_ID, SALA_BONI_ID, SALA_REDU_ID, SALA_NETO)
                                                                         VALUES (SYSDATE, P_EMPLEADO_ID,
                                                                                         G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION (P_EMPLEADO_ID), --> SIRVE SOLA
                                                                                         G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID), --> SIRVE SOLA
                                                                                         G4_PROYECTO_USUARIO_4.FN_CALCULAR_SALARIO_NETO (P_EMPLEADO_ID)); 
    COMMIT;   
    G4_PROYECTO_USUARIO_4.SP_UPDATE_DESPEDIDO (P_EMPLEADO_ID);
END;

--> FUNCIÓN QUE OBTIENE LA BONIFICACIÓN MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS
v_BONI_ID NUMBER;
BEGIN
     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN
        SELECT BONI_ID
            INTO v_BONI_ID
                FROM  G4_PROYECTO_USUARIO_3.BONIFICACION
                    WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
    END IF;

RETURN v_BONI_ID;
END;
--> PRUEBA
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION (2)
FROM DUAL;

--> FUNCIÓN QUE OBTIENE LA CALIFICACIÓN MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER 
 IS 
 v_CALIFICACION NUMBER;
 BEGIN 

    SELECT SUM (ORDENES.ORDE_CALIFICACION)
        INTO v_CALIFICACION
            FROM G4_PROYECTO_USUARIO_3.ORDENES
                WHERE ORDE_EMPLEADO_ID = P_EMPLEADO_ID;

    RETURN v_CALIFICACION;
END;
--> PRUEBA
SELECT G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (1)
FROM DUAL;

--> FUNCIÓN QUE OBTIENE LA REDUCCIÓN MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS
v_REDU_ID NUMBER;
BEGIN

    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        SELECT REDU_ID
            INTO v_REDU_ID
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
        END IF;

RETURN v_REDU_ID;
END;
--> PRUEBA
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (1)
FROM DUAL;

--> FUNCIÓN QUE CALCULA EL SALARIO MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULAR_SALARIO_NETO (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS 
v_OTROS NUMBER;
v_DESPIDO NUMBER;
BEGIN

v_OTROS  :=  G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);

    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN
        IF G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID) > 25000 THEN
            v_OTROS := 25000;
            v_OTROS := v_OTROS + G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);
        ELSE 
            v_OTROS  := G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID) + G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);
        END IF;
    END IF;

     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        IF G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO(P_EMPLEADO_ID)  > 10000 THEN
            v_OTROS := 10000;
            v_OTROS := G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID) - v_OTROS;
        ELSE 
            v_OTROS  := G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID) - G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO(P_EMPLEADO_ID);
        END IF;
    END IF;
RETURN v_OTROS;
END;

--> PROCEDIMIENTO QUE UPDATE SALARIO
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_UPDATE_DESPEDIDO (P_EMPLEADO_ID IN NUMBER)
IS 
v_OTROS NUMBER;
v_DESPIDO NUMBER;
BEGIN 
IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN

        SELECT REDU_DESPIDO
            INTO v_DESPIDO 
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);

        IF v_DESPIDO = 1 THEN 
            UPDATE G4_PROYECTO_USUARIO_2.EMPLEADO
                    SET EMPLEADO.EMPL_CARGO_ID = 4
                        WHERE EMPLEADO.EMPL_ID = P_EMPLEADO_ID;
            COMMIT;
            
            UPDATE G4_PROYECTO_USUARIO_1.SALARIO
                SET SALA_NETO = 0
                    WHERE SALA_EMPLEADO_ID = P_EMPLEADO_ID;
        END IF;
        
    END IF;
END;

--> FUNCIÓN QUE OBTIENE EL SALARIO MÍNIMO Y USA UN INNER JOIN MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER
IS
v_SALARIO_MINIMO NUMBER;
BEGIN
    SELECT CARG_SALARIO_MINIMO
        INTO v_SALARIO_MINIMO
            FROM G4_PROYECTO_USUARIO_2.EMPLEADO
                INNER JOIN G4_PROYECTO_USUARIO_2.CARGO ON 
                    EMPL_CARGO_ID = CARG_ID 
                        AND EMPL_ID = P_EMPLEADO_ID;
    RETURN v_SALARIO_MINIMO;
END;
--> PRUEBA
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (1)
FROM DUAL;

--> FUNCIÓN QUE OBTIENE LA RETRIBUCIÓN DE LA BONIFICACIÓN MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER
 IS
 v_MONTO_PORCENTAJE NUMBER;
 v_MONTO_NETO NUMBER;
 v_MONTO_PORCENTAJE_NETO NUMBER;
 BEGIN
     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN

        SELECT BONI_RETRIBUCION_MONTO_PORCENTUAL
             INTO v_MONTO_PORCENTAJE
                FROM G4_PROYECTO_USUARIO_3.BONIFICACION
                    WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);

            IF  v_MONTO_PORCENTAJE = 0 THEN

                SELECT BONI_RETRIBUCION_MONTO_NETO
                    INTO v_MONTO_NETO
                        FROM G4_PROYECTO_USUARIO_3.BONIFICACION
                            WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);

                RETURN v_MONTO_NETO;
             END IF;     

                  v_MONTO_PORCENTAJE_NETO := v_MONTO_PORCENTAJE * G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID);
                  RETURN v_MONTO_PORCENTAJE_NETO;      
    END IF;
END;

--> FUNCIÓN QUE OBTIENE EL MONTO NETO DE LAS FACTURAS QUE TENGA EL EMPLEADO MEDIANTE EL ID DE LA TABLA EMPLEADO.
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER
 IS 
 v_MONTO_NETO NUMBER;
 BEGIN 
    SELECT SUM(FACT_TOTAL)
        INTO v_MONTO_NETO
            FROM G4_PROYECTO_USUARIO_1.FACTURA
                 WHERE FACT_EMPLEADO_ID = P_EMPLEADO_ID;
    RETURN v_MONTO_NETO;
END;
--> PRUEBA
SELECT G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (1)
FROM DUAL;

--> FUNCIÓN QUE OBTIENE LA RETRIBUCIÓN DE LA REDUCCIÓN MEDIANTE EL ID DE LA TABLA EMPLEADO..
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER
 IS
 v_MONTO_PORCENTAJE NUMBER;
 v_MONTO_NETO NUMBER;
 v_MONTO_PORCENTAJE_NETO NUMBER;
 BEGIN
    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        SELECT RETRIBUCION_MONTO_PORCENTUAL
             INTO v_MONTO_PORCENTAJE
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);

        IF v_MONTO_PORCENTAJE = 0 THEN

                SELECT REDU_RETRIBUCION_MONTO_NETO
                    INTO v_MONTO_NETO
                        FROM G4_PROYECTO_USUARIO_3.REDUCCION
                            WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);

                RETURN v_MONTO_NETO;
         END IF;

         v_MONTO_PORCENTAJE_NETO := v_MONTO_PORCENTAJE * G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID);

                  RETURN v_MONTO_PORCENTAJE_NETO;    
     END IF;
  RETURN 0;
END;
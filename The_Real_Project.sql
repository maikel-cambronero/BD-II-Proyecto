/****************************************************PAGAR SALARIO ****************************************************/
 /*
 * PROCEDIMIENTO QUE INSERTA EL PAGO DE SALARIO.
 */
CREATE OR REPLACE PROCEDURE G4_PROYECTO_USUARIO_4.SP_PAGAR_SALARIO (P_SALARIO_ID IN NUMBER,
                                                                                                                                            P_EMPLEADO_ID IN NUMBER)
IS 
BEGIN 
    INSERT INTO G4_PROYECTO_USUARIO_1.SALARIO (SALA_ID, SALA_FECHA, SALA_EMPLEADO_ID, SALA_BONI_ID, SALA_REDU_ID, SALA_NETO)
                                                                         VALUES (P_SALARIO_ID, SYSDATE, P_EMPLEADO_ID,
                                                                         G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION (P_EMPLEADO_ID), 
                                                                         G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID), 
                                                                         G4_PROYECTO_USUARIO_4.FN_CALCULAR_SALARIO_NETO (P_EMPLEADO_ID)); 
                                                                         
    G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID);                                                                     
    COMMIT;                                                                     
END;
--> PRUEBA DEL PROCEDIMIENTO.
EXECUTE G4_PROYECTO_USUARIO_4.SP_PAGAR_SALARIO (1,1);
EXECUTE G4_PROYECTO_USUARIO_4.SP_PAGAR_SALARIO (2,2);
SELECT * FROM G4_PROYECTO_USUARIO_1.SALARIO;

/*
 * FUNCIÓN QUE OBTIENE EL SALARIO MÍNIMO DEL EMPLADO MEDIANTE UN INNER JOIN
 */
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER
IS
v_SALARIO_MINIMO NUMBER;
BEGIN

    SELECT CARG_SALARIO_MINIMO
        INTO v_SALARIO_MINIMO
            FROM G4_PROYECTO_USUARIO_2.EMPLEADO
                INNER JOIN G4_PROYECTO_USUARIO_2.CARGO ON 
                    EMPL_CARGO_ID = CARG_ID 
                        AND EMPL_ID = P_EMPLEADO_ID;
                        
    RETURN v_SALARIO_MINIMO;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (1)
 FROM DUAL;

/*
 * FUNCION QUE RETORNA LA CALIFICACION DEL EMPLEADO.
 */
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER 
 IS 
 v_CALIFICACION NUMBER;
 BEGIN 
 
    SELECT SUM (ORDENES.ORDE_CALIFICACION)
        INTO v_CALIFICACION
            FROM G4_PROYECTO_USUARIO_3.ORDENES
                WHERE ORDE_EMPLEADO_ID = P_EMPLEADO_ID;
                
    RETURN v_CALIFICACION;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT  G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (3)
 FROM DUAL;

/*
 * FUNCIÓN QUE OBTINE EL MONTO NETO QUE EL EMPLEADO OBTUVO.
 */
 CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID IN NUMBER)
                                                                         --   P_FECHA1 IN DATE,
                                                                         --   P_FECHA2 IN DATE)
 RETURN NUMBER
 IS 
 v_MONTO_NETO NUMBER;
 BEGIN 
    SELECT SUM(FACT_TOTAL)
        INTO v_MONTO_NETO
            FROM G4_PROYECTO_USUARIO_1.FACTURA
                 WHERE FACT_EMPLEADO_ID = P_EMPLEADO_ID;
                 --FACT_FECHA BETWEEN P_FECHA1 AND P_FECHA2;
    RETURN v_MONTO_NETO;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (2)
 FROM DUAL;
 
/*
 * FUNCIÓN QUE CALCULA LA RETRIBUCIÓN DEL MONTO NETO DEL EMPLEADO.
 */
 CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER
 IS
 v_MONTO_PORCENTAJE NUMBER;
 v_MONTO_NETO NUMBER;
 BEGIN
     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN
     
        SELECT BONI_RETRIBUCION_MONTO_PORCENTUAL
             INTO v_MONTO_PORCENTAJE
                FROM G4_PROYECTO_USUARIO_3.BONIFICACION
                    WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
                    
            IF v_MONTO_PORCENTAJE = NULL OR v_MONTO_PORCENTAJE = 0 THEN
            
                SELECT BONI_RETRIBUCION_MONTO_NETO
                    INTO v_MONTO_NETO
                        FROM G4_PROYECTO_USUARIO_3.BONIFICACION
                            WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
                            
                RETURN v_MONTO_NETO;
             END IF;     
                    
                  v_MONTO_PORCENTAJE := v_MONTO_PORCENTAJE * G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID);
                  RETURN v_MONTO_PORCENTAJE;      
    END IF;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (3)
 FROM DUAL;

/*
 * FUNCIÓN QUE CALCULA LA RETRIBUCIÓN DEL MONTO NETO DEL EMPLEADO.
 */ 
 CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID IN NUMBER)
 RETURN NUMBER
 IS
 v_MONTO_PORCENTAJE NUMBER;
 v_MONTO_NETO NUMBER;
 BEGIN
    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        SELECT RETRIBUCION_MONTO_PORCENTUAL
             INTO v_MONTO_PORCENTAJE
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
        
        IF v_MONTO_PORCENTAJE = NULL OR v_MONTO_PORCENTAJE = 0 THEN
            
                SELECT REDU_RETRIBUCION_MONTO_NETO
                    INTO v_MONTO_NETO
                        FROM G4_PROYECTO_USUARIO_3.REDUCCION
                            WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
                            
                RETURN v_MONTO_NETO;
         END IF;
         
         v_MONTO_PORCENTAJE := v_MONTO_PORCENTAJE * G4_PROYECTO_USUARIO_4.FN_OBTENER_MONTO_NETO (P_EMPLEADO_ID);
         
                  RETURN v_MONTO_PORCENTAJE;    
     END IF;
  
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO(1) 
FROM DUAL;

--> 
/*
 * FUNCIÓN QUE CALCULA EL MONTO NETO A PAGARLE AL EMPLEADO.
 */
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_CALCULAR_SALARIO_NETO (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS 
v_OTROS NUMBER;
v_DESPIDO NUMBER;
BEGIN
    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN
        IF G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID) > 25000 THEN
            v_OTROS := 25000;
            v_OTROS := v_OTROS + G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);
        ELSE 
            v_OTROS  := G4_PROYECTO_USUARIO_4.FN_CALCULA_BONI_RETRIBUCION_EMPLEADO (P_EMPLEADO_ID) + G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);
        END IF;
    END IF;
    
     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        IF G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO(P_EMPLEADO_ID)  > 10000 THEN
            v_OTROS := 10000;
            v_OTROS := G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID) - v_OTROS;
        ELSE 
            v_OTROS  := G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID) - G4_PROYECTO_USUARIO_4.FN_CALCULA_REDU_RETRIBUCION_EMPLEADO(P_EMPLEADO_ID);
        END IF;
    END IF;
    
    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        SELECT REDU_DESPIDO
            INTO v_DESPIDO 
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE REDU_ID = G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID);
                    
            UPDATE G4_PROYECTO_USUARIO_2.EMPLEADO
                SET EMPLEADO.EMPL_CARGO_ID = 4
                    WHERE EMPLEADO.EMPL_ID = P_EMPLEADO_ID;
                    
        IF v_DESPIDO = 1 THEN 
            v_OTROS :=  0;
        END IF;
        
    END IF;
    
    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) = 0 THEN
            v_OTROS  :=  G4_PROYECTO_USUARIO_4.FN_OBTIENE_SALARIO_MINIMO (P_EMPLEADO_ID);
        END IF;
    
RETURN v_OTROS;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_CALCULAR_SALARIO_NETO(1) 
FROM DUAL; 

/*
 * FUNCIÓN QUE OBTIENE EL ID DE LA TABLA REDUCCIONES CON EL QUE SE TRABAJA DURANTE EL PROCESO DE OBTENER EL SALARIO DEL EMPLEADO.
 */
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS
v_REDU_ID NUMBER;
BEGIN

    IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) < 0 THEN
        SELECT REDU_ID
            INTO v_REDU_ID
                FROM G4_PROYECTO_USUARIO_3.REDUCCION
                    WHERE REDUCCION.CALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
        END IF;
    
RETURN v_REDU_ID;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_REDUCCION (1)
FROM DUAL; 

/*
 * FUNCIÓN QUE OBTIENE EL ID DE LA TABLA BONIFICACIONES CON EL QUE SE TRABAJA DURANTE EL PROCESO DE OBTENER EL SALARIO DEL EMPLEADO.
 */
CREATE OR REPLACE FUNCTION G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION (P_EMPLEADO_ID IN NUMBER)
RETURN NUMBER 
IS
v_BONI_ID NUMBER;
BEGIN
     IF G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID) > 0 THEN
        SELECT BONI_ID
            INTO v_BONI_ID
                FROM  G4_PROYECTO_USUARIO_3.BONIFICACION
                    WHERE BONIFICACION.BONI_RCALIFICACION = G4_PROYECTO_USUARIO_4.FN_OBTENER_CALIFICACION (P_EMPLEADO_ID);
    END IF;
    
RETURN v_BONI_ID;
END;
--> PRUEBA DE LA FUNCIÓN.
SELECT G4_PROYECTO_USUARIO_4.FN_OBTIENE_ID_BONIFICACION(1)
FROM DUAL;  

